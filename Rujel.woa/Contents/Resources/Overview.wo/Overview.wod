AccessStudents: WOConditional {
	condition = access.students;
}

AccesssSubjects: WOConditional {
	condition = access.subjects;
}

CheckBox1: WOCheckBox {
	checked = studentSelected;
	name = "cb";
	onclick = "changeMass(null);";
}

ClassListing1: ClassListing {
	selection = currClass;
	width = "100%";
	selectAction = selectClass;
	editingContext = ec;
	onClick = session.tryLoad;
}

ClassTitle: WOString {
	value = application.strings.RujelInterfaces_Names.EduGroup.this;
}

Conditional1: WOConditional {
	condition = reporter.hideDates;
	negate = true;
}

Conditional2: WOConditional {
	condition = false;
}

CourseComment: WOString {
	value = courseItem.course.comment;
}

Form2: WOForm {
	target = "_blank";
	multipleSubmit = true;
}

HasClass: WOConditional {
	condition = currClass;
}

IfTabs: WOConditional {
	condition = false;
}

LessonTabs1: Tabs {
	currTab = currTab;
	tablist = courseItem.tablist;
	onClick = session.tryLoad;
	vertical = true;
	formatter = "%1$d...%2$d";
	key1 = "lessonsInTab.@min.number";
	key2 = "lessonsInTab.@max.number";
	hformatter = "%3$te.%3$tm - %4$te.%4$tm";	key3 = "lessonsInTab.@min.date";	key4 = "lessonsInTab.@max.date";}

Modes: Tabs {
	currTab = currentMode;
	tablist = application.strings.Strings.Overview.tabs;
	onClick = session.tryLoad;
	vertical = false;
	numeric = true;
}
HasSelector: WOConditional {
	condition = showSelector;
}

CriterSelector1: WOSwitchComponent {
	WOComponentName = present.selector;
	cycle = currSubject.cycle;
}
PresentTabs: Tabs {
	currTab = present;
	tablist = presentTabs;
	onClick = session.tryLoad;
	vertical = false;
	titleAttribute = "title";
	hoverAttribute = "hover";
}

NotesPage1: NotesPage {
	lessonsList = courseItem.lessonsList;
	studentsList = courseItem.course.groupList;
	course = courseItem.course;
	present = present;
}

PageWrapper1: PageWrapper {
	hasChanges = false;
	title = application.strings.Strings.Overview.title;
	cssURL = present.cssURL;
	cssResource = present.cssResource;
	scriptURL = present.scriptURL;
	scriptResource = present.scriptResource;
	resourcesFramework = present.framework;
}

PeriodSelector: PeriodSelector {
	begin = since;
	end = to;
	period = period;
	selectAction = updateLessonLists;
}

PersonSelector1: PersonSelector {
	list = currClass.list;
	nameFormat = "220+";
	selectedItem = currStudent;
	selection = selectedStudents;
	selectAction = selectStudent;
}

Repetition1: WORepetition {
	item = courseItem;
	list = courses;
}

Repetition2: WORepetition {
	item = reporterItem;
	list = session.modules.overviewAction;
}

ReporterContainer: WOGenericContainer {
	elementName = "span";
	invokeAction = selectReporter;
	onclick = session.tryLoad;
	onmouseout = "style.textDecoration='none';";
	onmouseover = "style.textDecoration='underline';";
	style = reporterItemStyle;
	title = reporterItem.hover;
}

ReportersList: WORepetition {
	item = reporterItem;
	list = reporterList;
}

ReportetTitle: WOString {
	value = reporterItem.title;
}

ShowMarks: WOSubmitButton {
	action = printSelectedStudents;
	value = application.strings.Strings.Overview.showMarks;
}

ShowMarks2: WOSubmitButton {
	action = overviewAction;
	value = reporterItem.name;
}

ShowReporterSelector: WOConditional {
	condition = showReporterSelector;
}

Since: WOString {
	dateformat = application.prefs.ui.dateFormat;
	value = since;
}

StudentContainer: WOGenericContainer {
	class = studentStyle;
	elementName = "tr";
}

StudentMarks : WOSwitchComponent {
	since = since;
	student = currStudent;
	to = to;
	courses = existingCourses;
	WOComponentName = reporter.component;
	reporter = reporter;
	period = period;
}

StudentName: PersonDisplay {
	person = studentItem.person;
	last = 2;
	first = 2;
	second = 0;
	startWithLast = true;
}

StudentNameContainer: OnClickContainer {
	elementName = "td";
	style = "white-space:nowrap;";
	invokeAction = selectStudent;
	onclick = session.tryLoad;
}

CurrStudentName: PersonDisplay {
	person = currStudent;
	startWithLast = true;
	last = 2;
	first = 2;
	second = 1;
}

StudentSelected: WOConditional {
	condition = currStudent;
}

StudentsMode: WOConditional {
	condition = currentMode;
}

SubjectContainer: OnClickContainer {
	class = subjItem.style;
	elementName = "tr";
	invokeAction = selectSubject;
	onclick = session.tryLoad;
}

SubjectMode: WOConditional {
	condition = currentMode;
	negate = true;
}

SubjectName: WOString {
	value = subjItem.subject;
}

Subjects: WORepetition {
	item = subjItem;
	list = subjects;
}

Subjects2: WORepetition {
	item = studentItem;
	list = currClass.list;
}

TeacherName: PersonDisplay {
	person = courseItem.course.teacher;
	last = 2;
	first = 2;
	second = 2;
	startWithLast = true;
}

Ticker1: Ticker {
	align = "left";
	inline = true;
}

To: WOString {
	dateformat = application.prefs.ui.dateFormat;
	value = to;
}

ShowThemes : WOHyperlink {
	action = showThemes;
	target = "_blank";
}

LessonsLink : WOString {
  value = application.strings.RujelInterfaces_Names.EduCourse.lessons;
  valueWhenEmpty = "lessons";
}

SubsReport : WOHyperlink {
  action = subsReport;
  disabled = session.readAccess._read.SubsReport;
  string = subTitle;
}

CoursesCSS : ResourceLink {
  cssLink = "courses.css";
  framework = "app";
}

TickCount : WOTextField {
  value = selectedStudents.count;
  disabled = true;
  size = 2;
  style = "text-align:center;";
  id = "total";
}

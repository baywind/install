Comment: WOString {
	value = course.comment;
	valueWhenEmpty = " - ";
}

CommentForm: WOForm {
	name = "commentForm";
	onsubmit = session.checkRun;
	style = "display:none;";
}

Conditional4: WOConditional {
	condition = session.readAccess.edit.course.@comment;
}

CourseComment: WOTextField {
	value = course.comment;
}

EditCommentLink: WOGenericContainer {
	elementName = "a";
	href = "#";
	onclick = "document.commentForm.style.display = (document.commentForm.style.display == 'none')?'':'none';";
	title = application.strings.RujelInterfaces_Names.EduCourse.comment;
	omitTags = session.readAccess._edit.course.@comment;
}

Form1: WOForm {
	multipleSubmit = true;
	onSubmit = "return tryLoad();";
}

GoLeft: WOImageButton {
	filename = "lft-OSarw.gif";
	framework = "JavaWOExtensions";
	action = moveLeft;
	title = goLeftTitle;
}

GoRight: WOImageButton {
	filename = "rt-OSarw.gif";
	framework = "JavaWOExtensions";
	action = moveRight;
	title = goRightTitle;
}

LessonList1: WOSwitchComponent {
	WOComponentName = listPresenter;
	course = course;
	student = student;
	lessonsList = lessonsList;
	currLesson = currPerPersonLink;
	selector = selector;
	save = save;
	delete = delete;
	addLesson = addLesson;
	wide = hideLeft;
	down = down;
	splitTab = splitTab;
	splitTitle = splitTitle;
	up = up;
}

LessonTabs1: Tabs {
	currTab = currTab;
	tablist = item;
	onClick = session.checkRun;
	vertical = true;
}

BaseTabs: Tabs {
	currTab = currTab;
	tablist = baseTabs;
	onClick = session.checkRun;
	vertical = true;
}

NotePageContainer: WOGenericContainer {
	class = "selectionBorder";
	elementName = "td";
	style = "border-left-style:none;";
	width = tdWidth;
	valign = "top";
}

NotesPage1: NotesPage {
	course = course;
	currLesson = currPerPersonLink;
	lessonsList = lessonsList;
	studentsList = course.groupList;
	selectStudent = selector;
	selectStudentAction = selectStudent;
	currStudent = student;
	single = single;
	present = present;
}

OverGroupName: WOString {
	value = course.eduGroup.name;
}

PageWrapper1: PageWrapper {
	hasChanges = ec.hasChanges;
	title = title;
	onLoad="pagePreflight();focus();";
	styles = "a {font-style:italic;text-decoration:none;color:blue;} a:hover{color:red;} .fsc {float:right;margin-left:3px;font: 70% monospace;color:#66cc66;text-decoration:inherit;position:relative;top:-0.7em;}";
	cssURL = present.cssURL;
	cssResource = present.cssResource;
	scriptURL = present.scriptURL;
	scriptResource = present.scriptResource;
	resourcesFramework = present.framework;
	resources = resources;
}

SubGroup: WOString {
	value = application.strings.RujelInterfaces_Names.EduCourse.subgroup;
	valueWhenEmpty = "SubGroup";
}

ShowLeft: WOConditional {
	condition = hideLeft;
	negate = true;
}

ShowRight: WOConditional {
	condition = showRight;
}

ShowSeparator: WOConditional {
	condition = showSeparator;
}

ShowTablist: WOConditional {
	condition = showTabs;
}

Span: OnClickContainer {
	class = "button";
	elementName = "span";
	invokeAction = editSubgroup;
	onclick = session.checkRun;
	hide = session.readAccess._read.CourseAudience;
}

SubjectName: WOString {
	value = course.cycle.subject;
}

SubmitComment: WOImageButton {
	action = saveComment;
	filename = "button_ok.gif";
	framework = "app";
}

HasSelector: WOConditional {
	condition = present.selector;
}

CriterSelector1: WOSwitchComponent {
	WOComponentName = present.selector;
	cycle = course.cycle;
	course = course;
}

PresentTabs: Tabs {
	currTab = present;
	tablist = presentTabs;
	onClick = session.checkRun;
	vertical = false;
	titleAttribute = "title";
	align = "center";
	hoverAttribute = "hover";
}

TeacherName: PersonDisplay {
	person = activeTeacher;
	first = 2;
	last = 2;
	second = 2;
	valueWhenEmpty = application.strings.RujelBase_Base.vacant;
	emptyStyle = "font-style:italic;";
}


TabsRepetition : WORepetition {
	list = allTabs;
	item = item;
}

JournalPlugins : WORepetition {
	list = dashboard;
	item = item;
}

PluginLabel : WOSwitchComponent {
  WOComponentName = item.component;
  dict = item;
  course = course;
  present = present;
  currTab = currTab;
  lesson = currLesson;
  weekFootprint = weekFootprint;
}

GroupSpan : OnClickContainer {
  elementName = "span";
  onclick = session.checkRun;
  invokeAction = chooseEduGroup;
  title = groupHover;
}

TeacherSpan : OnClickContainer {
  elementName = "span";
  onclick = session.checkRun;
  invokeAction = chooseTeacher;
  title = application.strings.Strings.LessonNoteEditor.byTeacher;
  style = teacherStyle;
}

EditLink: OnClickContainer {
	elementName = "span";
	hide = course.namedFlags._teacherChanged;
	invokeAction = inspectCourse;
	onclick = session.ajaxPopup;
}

files_edit: WOImage {
	filename = "files_edit.png";
	height = 16;
	width = 16;
}

AddTabDiv : OnClickContainer {
  elementName = "div";
  invokeAction = splitTab;
  hide = cantAddTab;
  onclick = session.checkRun;
  style = "margin-top:1.5ex;padding:1pt;border-width:1px 1px 1px 0px;text-align:center;font-weight:bold;";
  class = "grey selectionBorder";
  title = splitTitle;
}

SplitSign : WOString {
  value = splitSign;
  escapeHTML = false;
}

CustomTab : OnClickContainer {
  elementName = "div";
  hide = hideCustomTab;
  class = customTabClass;
  invokeAction = customTab;
  onclick = session.ajaxPopup;
  style="margin-bottom:1ex;padding:1pt 3pt;white-space:nowrap;";
  title = session.strings.Strings.LessonNoteEditor.manualTab;
}

CustomTabTitle : WOString {
  value = session.strings.Strings.LessonNoteEditor.manTab;
  escapeHTML = false;
}

HasSelection : WOConditional {
  condition = currLesson;
}

SaveButton : WOImageButton {
  framework = "JavaWOExtensions";
  filename = "TransparentPixel.gif";
  action = save;
}

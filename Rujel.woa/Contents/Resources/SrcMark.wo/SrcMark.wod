PageWrapper1: PageWrapper {
	hasChanges = ec.hasChanges;
	title = title;
	onLoad = "focus();";
}

Title: WOString {
	value = title;
}

EduGroupLabel: WOString {
	value = application.strings.RujelInterfaces_Names.EduGroup.this;
	valueWhenEmpty = "Class";
	escapeHTML = false;
}

EduPlanLabel: WOString {
	value = application.strings.RujelInterfaces_Names.EduCycle.subject;
	valueWhenEmpty = "Subject";
	escapeHTML = false;
}

CountTitle: WOString {
	value = application.strings.RujelInterfaces_Names.EduCourse.lessons;
}

TeacherLabel: WOString {
	value = application.strings.RujelInterfaces_Names.EduCourse.teacher;
	valueWhenEmpty = "Teacher";
	escapeHTML = false;
}

ClassListing1: ClassListing {
	selection = currClass;
	width = "100%";
	selectAction = selectClass;
	editingContext = ec;
	onClick = session.checkRun;
	showTitle = true;
}

Repetition1: WORepetition {
	list = courses;
	item = item;
	index = cursIndex;
}

UnSelected: WOConditional {
	condition = isSelected;
	negate = true;
}

IfEduPlan: WOConditional {
	condition = isEduPlan;
}


GenericContainer: OnClickContainer {
	class = rowStyle;
	elementName = "tr";
	invokeAction = select;
	onclick = session.checkRun;
	disabled = disableSelect;
}

CycleGrade: WOString {
	value = item.grade;
}

CycleSubject: WOString {
	value = item.subject;
}

IfExistingCourse: WOConditional {
	condition = isEduPlan;
	negate = true;
}

ClassName: WOString {
	value = item.eduGroup.name;
}

CourseSubject: WOString {
	value = item.subjectWithComment;
	escapeHTML = false;
}

TeacherLN: PersonDisplay {
	person = item.teacher;
	last = 2;
	first = 1;
	second = 1;
	startWithLast = true;
	valueWhenEmpty = application.strings.RujelBase_Base.vacant;
	emptyStyle = "font-style:italic;";
}

EditLink: WOHyperlink {
	disabled = true;
	action = selectCourse;
	style = "z-index:4;";
}

files_edit: WOImage {
	align = "right";
	filename = "files_edit.png";
}

Selected: WOConditional {
	condition = isSelected;
}

TeacherName: WOString {
	value = teacherName;
	escapeHTML = false;
}

SubmitName: WOImageButton {
	action = save;
	filename = "button_ok.gif";
	framework = "app";
	align = "right";
}

Conditional1: WOConditional {
	condition = canCreate;
}

AddCourse: OnClickContainer {
	elementName = "tr";
	invokeAction = addCourse;
	onclick = session.checkRun;
	class="orange";
	hide = cantCreate;
}

Add: WOString {
	value = application.strings.Reusables_Strings.uiElements.Add;
	valueWhenEmpty = "Add";
	escapeHTML = false;
}

CourseEntity: WOString {
	value = application.strings.RujelInterfaces_Names.EduCourse.this;
	valueWhenEmpty = "Lesson";
	escapeHTML = false;
}

CreateNew: WOConditional {
	condition = createNew;
}

Form1: WOForm {
	multipleSubmit = true;
	onSubmit = "return tryLoad();";
	action = chooseTeacherForDict;
}


GradeCyclesPopup: WOPopUpButton {
	displayString = item.subject;
	item = item;
	list = popupCycles;
	selection = dict.cycle;
}

Save: WOSubmitButton {
	action = save;
	value = application.strings.Reusables_Strings.uiElements.Save;
}

CanEditCourse : WOConditional {
  condition = session.readAccess.edit.item;
}

LessonsCount : WOString {
  value = item.lessons.count;
}

GroupsTitle : WOString {
  value = session.strings.Strings.SrcMark.eduGroups;
  escapeHTML = false;
}

EduGroup : WOString {
  value = dict.eduGroup.name;
}
SelectTeacher : OnClickContainer {
  elementName = "em";
  invokeAction = chooseTeacherForDict;
  onclick = "ajaxPost(get(this,'form'),event);";
}

CommentField : WOTextField {
  value = dict.comment;
  size = 6;
  style = "text-align:center;";
}

ChooseCurrTeacher : OnClickContainer {
  elementName = "td";
  align = "right";
  onclick = session.ajaxPopup;
  invokeAction = chooseCurrentTeacher;
  class = "orange";
  width = "30%";
  style = "font-weight:bold;font-style:italic;";
}

TeacherCell : OnClickContainer {
  elementName = "td";
  invokeAction = selectTeacher;
  onclick = session.checkRun;
  class = teacherRowClass;
}

CurrTeacherName : PersonDisplay {
  person = currTeacher;
  valueWhenEmpty = session.strings.RujelBase_Base.vacant;
  startWithLast = true;
  last = 2;
  first = 1;
  second = 1;
}

SelectorTitle : WOString {
  value = session.strings.Strings.ChooseRegime.SrcMark;
  escapeHTML = false;
}

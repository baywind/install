USE RujelYear2010;

ALTER TABLE EO_PK_TABLE
  MODIFY COLUMN PK integer;

ALTER TABLE BASE_SETTINGS
  MODIFY COLUMN S_ID smallint NOT NULL;

CREATE TABLE IF NOT EXISTS BASE_QUALIFIED_SETTINGS (
  QS_ID mediumint NOT NULL,
  SETTING_ID smallint NOT NULL,
  QUALIFIER_STRING varchar(255),
  ARGUMENTS_STRING varchar(255),
  EDU_YEAR smallint,
  ORDER_KEY smallint NOT NULL,
  TEXT_VALUE varchar(255),
  NUM_VALUE int,
  PRIMARY KEY (QS_ID)
) ENGINE=InnoDB;

INSERT INTO BASE_QUALIFIED_SETTINGS
SELECT SC_ID, SETTING_ID, 'IS' AS QUALIFIER_STRING, 
CONCAT('BaseCourse:',EDU_COURSE) AS ARGUMENTS_STRING,
EDU_YEAR, 5, TEXT_VALUE, NUM_VALUE
 FROM BASE_BY_COURSE
where EDU_COURSE IS NOT NULL;

INSERT INTO BASE_QUALIFIED_SETTINGS
SELECT SC_ID, SETTING_ID, 'cycle.grade = %d' AS QUALIFIER_STRING, 
CONCAT('("',GRADE_NUM,'")') AS ARGUMENTS_STRING,
EDU_YEAR, 1, TEXT_VALUE, NUM_VALUE
 FROM BASE_BY_COURSE
where EDU_CYCLE IS NULL AND EDU_GROUP IS NULL AND GRADE_NUM IS NOT NULL;

INSERT INTO BASE_QUALIFIED_SETTINGS
SELECT SC_ID, SETTING_ID, 'eduGroup = %@' AS QUALIFIER_STRING, 
CONCAT('("VseEduGroup:',EDU_GROUP,'")') AS ARGUMENTS_STRING,
EDU_YEAR, 2, TEXT_VALUE, NUM_VALUE
 FROM BASE_BY_COURSE
where EDU_CYCLE IS NULL AND EDU_GROUP IS NOT NULL;

INSERT INTO BASE_QUALIFIED_SETTINGS
SELECT SC_ID, SETTING_ID, 'cycle = %@' AS QUALIFIER_STRING, 
CONCAT('("PlanCycle:',EDU_CYCLE,'")') AS ARGUMENTS_STRING,
EDU_YEAR, 3, TEXT_VALUE, NUM_VALUE
 FROM BASE_BY_COURSE
where EDU_CYCLE IS NOT NULL AND EDU_GROUP IS NULL;

INSERT INTO BASE_QUALIFIED_SETTINGS
SELECT SC_ID, SETTING_ID, 'cycle = %@ AND eduGroup = %@' AS QUALIFIER_STRING, 
CONCAT('("PlanCycle:',EDU_CYCLE,'","VseEduGroup:',EDU_GROUP,'")') AS ARGUMENTS_STRING,
EDU_YEAR, 4, TEXT_VALUE, NUM_VALUE
 FROM BASE_BY_COURSE
where EDU_CYCLE IS NOT NULL AND EDU_GROUP IS NOT NULL;

ALTER TABLE BASE_COURSE
  MODIFY COLUMN EDU_GROUP mediumint;
  
CREATE TABLE IF NOT EXISTS SCHEMA_VERSION (
  MODEL_NAME varchar(255),
  VERSION_NUMBER smallint unsigned NOT NULL,
  VERSION_TITLE varchar(255),
  INSTALL_DATE timestamp
);

INSERT INTO SCHEMA_VERSION (MODEL_NAME,VERSION_NUMBER,VERSION_TITLE)
  VALUES ('BaseYearly',1,'0.9');

ALTER TABLE CU_VARIATION
  ADD COLUMN LESSON_ID int;

INSERT INTO SCHEMA_VERSION (MODEL_NAME,VERSION_NUMBER,VERSION_TITLE)
  VALUES ('Curriculum',1,'0.9');

DELETE from EO_PK_TABLE
  where `NAME` = 'CU_VARIATION';

INSERT into EO_PK_TABLE (`NAME`,`PK`)
  SELECT 'CU_VARIATION', MAX(V_ID)
  from CU_VARIATION;

INSERT into CU_VARIATION (V_ID, EDU_COURSE, VAR_DATE, VAR_VALUE, REASON_ID)
SELECT count(v2.V_ID) + pk.PK as num, v1.EDU_COURSE, v1.VAR_DATE, 1, v1.REASON_ID
FROM EO_PK_TABLE pk, CU_VARIATION v1
inner join CU_VARIATION v2 on v1.V_ID >= v2.V_ID and v2.VAR_VALUE > 1
where v1.VAR_VALUE > 1 AND pk.NAME = 'CU_VARIATION'
group by v1.V_ID;

update CU_VARIATION
set VAR_VALUE = VAR_VALUE -1
where VAR_VALUE > 1;
## 4 -> 3

UPDATE EO_PK_TABLE
  set `PK` = (SELECT MAX(V_ID) from CU_VARIATION)
  where `NAME` = 'CU_VARIATION';

INSERT into CU_VARIATION (V_ID, EDU_COURSE, VAR_DATE, VAR_VALUE, REASON_ID)
SELECT count(v2.V_ID) + pk.PK as num, v1.EDU_COURSE, v1.VAR_DATE, 1, v1.REASON_ID
FROM EO_PK_TABLE pk, CU_VARIATION v1
inner join CU_VARIATION v2 on v1.V_ID >= v2.V_ID and v2.VAR_VALUE > 1
where v1.VAR_VALUE > 1 AND pk.NAME = 'CU_VARIATION'
group by v1.V_ID;

update CU_VARIATION
set VAR_VALUE = VAR_VALUE -1
where VAR_VALUE > 1;
## 3 -> 2

UPDATE EO_PK_TABLE
  set `PK` = (SELECT MAX(V_ID) from CU_VARIATION)
  where `NAME` = 'CU_VARIATION';

INSERT into CU_VARIATION (V_ID, EDU_COURSE, VAR_DATE, VAR_VALUE, REASON_ID)
SELECT count(v2.V_ID) + pk.PK as num, v1.EDU_COURSE, v1.VAR_DATE, 1, v1.REASON_ID
FROM EO_PK_TABLE pk, CU_VARIATION v1
inner join CU_VARIATION v2 on v1.V_ID >= v2.V_ID and v2.VAR_VALUE > 1
where v1.VAR_VALUE > 1 AND pk.NAME = 'CU_VARIATION'
group by v1.V_ID;

update CU_VARIATION
set VAR_VALUE = VAR_VALUE -1
where VAR_VALUE > 1;
## 2 -> 1

UPDATE EO_PK_TABLE
  set `PK` = (SELECT MAX(V_ID) from CU_VARIATION)
  where `NAME` = 'CU_VARIATION';

CREATE TABLE CU_TMP
SELECT v.V_ID, l.L_ID, count(l2.L_ID) as L_NUM
FROM CU_VARIATION v
join BASE_LESSON l on l.EDU_COURSE = v.EDU_COURSE AND l.DATE_PERFORMED = v.VAR_DATE 
inner join BASE_LESSON l2 on l2.EDU_COURSE = v.EDU_COURSE AND l2.DATE_PERFORMED = v.VAR_DATE AND l2.L_ID <= l.L_ID
where v.VAR_VALUE = 1
group by v.V_ID, l.L_ID;

CREATE TABLE CU_TMP2
select t1.*, count(t2.L_ID) as V_NUM
from CU_TMP t1
inner join CU_TMP t2 ON t1.L_ID = t2.L_ID AND t2.V_ID <= t1.V_ID
group by t1.L_ID, t1.V_ID;

update CU_VARIATION v
LEFT OUTER JOIN CU_TMP2 t on v.V_ID = t.V_ID AND t.V_NUM = t.L_NUM
set v.LESSON_ID = t.L_ID
where v.VAR_VALUE = 1;

drop table CU_TMP2;
drop table CU_TMP;


CREATE TABLE CU_TMP
SELECT v2.VAR_DATE, r.R_ID, v2.V_ID plus,v1.V_ID as minus,v1.VAR_VALUE, c1.EDU_GROUP, v2.LESSON_ID
FROM CU_VARIATION v1, CU_VARIATION v2, CU_REASON r, BASE_COURSE c1, BASE_COURSE c2
where v1.VAR_VALUE < 0 and v2.VAR_VALUE = 1 and v1.REASON_ID = v2.REASON_ID and v1.VAR_DATE = v2.VAR_DATE  
AND r.R_ID = v2.REASON_ID and r.TEACHER_ID is not null 
AND c1.CR_ID = v1.EDU_COURSE and c2.CR_ID = v2.EDU_COURSE AND c1.EDU_GROUP = c2.EDU_GROUP;

CREATE TABLE CU_TMP1
select t1.plus,t1.minus,t1.LESSON_ID,t1.VAR_VALUE, count(t2.minus) as P_NUM
from CU_TMP t1
inner join CU_TMP t2 ON t1.minus = t2.minus AND t2.plus <= t1.plus
group by t1.minus, t1.plus;

CREATE TABLE CU_TMP2
select t1.plus,t1.minus,t1.LESSON_ID, t1.VAR_VALUE, t1.P_NUM,count(t2.plus) as M_NUM
from CU_TMP1 t1
inner join CU_TMP1 t2 ON t1.minus >= t2.minus AND t2.plus = t1.plus
group by t1.minus, t1.plus;

update CU_VARIATION v, CU_TMP2 t
set v.LESSON_ID = t.LESSON_ID
where v.V_ID = t.minus and t.VAR_VALUE = -1 and t.P_NUM = t.M_NUM;

delete from CU_TMP2
where VAR_VALUE = -1;

drop table CU_TMP2;
drop table CU_TMP1;
drop table CU_TMP;

-- уровни

USE RujelUsers;

CREATE TABLE IF NOT EXISTS SCHEMA_VERSION (
  MODEL_NAME varchar(255),
  VERSION_NUMBER smallint unsigned NOT NULL,
  VERSION_TITLE varchar(255),
  INSTALL_DATE timestamp
);

INSERT INTO SCHEMA_VERSION (MODEL_NAME,VERSION_NUMBER,VERSION_TITLE)
  VALUES ('RujelUsers',1,'0.9');

ALTER TABLE AUT_GROUP
  ADD COLUMN SECTION_NUM smallint;

USE RujelStatic;

CREATE TABLE IF NOT EXISTS SCHEMA_VERSION (
  MODEL_NAME varchar(255),
  VERSION_NUMBER smallint unsigned NOT NULL,
  VERSION_TITLE varchar(255),
  INSTALL_DATE timestamp
);

INSERT INTO SCHEMA_VERSION (MODEL_NAME,VERSION_NUMBER,VERSION_TITLE)
  VALUES ('EduPlanModel',1,'0.9');

ALTER TABLE PL_CYCLE
  CHANGE COLUMN `LEVEL_EDU` `EDU_SECTION` SMALLINT NOT NULL;

ALTER TABLE PL_SUBJECT
  ADD COLUMN `SPEC_FLAGS` SMALLINT NOT NULL DEFAULT 0;

USE VseLists;

CREATE TABLE IF NOT EXISTS SCHEMA_VERSION (
  MODEL_NAME varchar(255),
  VERSION_NUMBER smallint unsigned NOT NULL,
  VERSION_TITLE varchar(255),
  INSTALL_DATE timestamp
);

INSERT INTO SCHEMA_VERSION (MODEL_NAME,VERSION_NUMBER,VERSION_TITLE)
  VALUES ('VseLists',1,'0.9');

ALTER TABLE VSE_STUDENT
  ADD COLUMN `SCHOOL_NUM` SMALLINT NOT NULL DEFAULT 0;

ALTER TABLE VSE_TEACHER
  ADD COLUMN `SCHOOL_NUM` SMALLINT NOT NULL DEFAULT 0;

ALTER TABLE VSE_EDU_GROUP
  ADD COLUMN `SCHOOL_NUM` SMALLINT NOT NULL DEFAULT 0,
  ADD COLUMN `SECTION_NUM` SMALLINT NOT NULL DEFAULT 0;

CREATE TABLE VSE_TUTOR (
  T_ID mediumint NOT NULL,
  EDU_GROUP mediumint NOT NULL,
  TEACHER_ID mediumint NOT NULL,
  ENTER_DT date,
  LEAVE_DT date,
  STATUS_ID SMALLINT NOT NULL DEFAULT 0,
  PRIMARY KEY (T_ID)
) ENGINE=InnoDB;

USE RujelYear2010;

ALTER TABLE PL_HOLIDAY
  ADD COLUMN `HOLIDAY_NAME` VARCHAR(28) NOT NULL DEFAULT '?' AFTER `H_ID`;

update PL_HOLIDAY H, RujelStatic.PL_HOLIDAY_TYPE T
set H.HOLIDAY_NAME = T.HOLIDAY_NAME
where H.HD_TYPE = T.HT_ID;

ALTER TABLE PL_HOLIDAY
 MODIFY COLUMN `HOLIDAY_NAME` VARCHAR(28) NOT NULL,
 DROP COLUMN `HD_TYPE`;

INSERT INTO PL_HOLIDAY  (H_ID, HOLIDAY_NAME, DATE_BEGIN, DATE_END)
  SELECT HT_ID, HOLIDAY_NAME, MAKEDATE(2010,BEGIN_DAY) + INTERVAL BEGIN_MONTH MONTH AS DATE_BEGIN,
    MAKEDATE(2010,END_DAY) + INTERVAL END_MONTH MONTH AS DATE_END
  FROM RujelStatic.PL_HOLIDAY_TYPE
  WHERE NOT EXISTS (select * from PL_HOLIDAY);


INSERT INTO SCHEMA_VERSION (MODEL_NAME,VERSION_NUMBER,VERSION_TITLE)
  VALUES ('EduPlanYearly',1,'0.9');


-- убрать "типы каникул"

-- додумать indexer
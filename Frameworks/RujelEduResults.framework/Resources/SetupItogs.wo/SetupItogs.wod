ListSettings : ListSettings {
  ec = ec;
  key = "ItogMark";
  currList = listName;
  extraLists = extraLists;
  checkAccess = "ItogTypeList";
  listAccess = access;
}

AllTypes : WORepetition {
  list = typesList;
  item = item;
}

Form : WOForm {
}

Active : WOCheckBox {
  checked = item.active;
  disabled = access._edit;
}

TypesTitle : WOString {
  value = session.strings.RujelEduResults_EduResults.properties.ItogType.this;
  escapeHTML = false;
}

TypeName : WOString {
  value = item.type.name;
}

TypeTitle : WOString {
  value = item.type.title;
}

InYearCount : WOString {
  value = item.type.inYearCount;
  numberformat = "#;*;(#)";
}

AddType : OnClickContainer {
  elementName = "td";
  onclick = session.ajaxPopup;
  invokeAction = addType;
  class = "green";
  style = "padding:0px 4px;font-weight:bold;border:double 3px #33cc33;color:#33cc33;";
  hide = typeAccess._create;
}

Save: WOSubmitButton {
  action = saveList;
  value = application.strings.Reusables_Strings.uiElements.Save;
  onclick = "try{enumerate(get(this,'table',0),'numerate',1);}catch(e){alert(e);}";
}

HasSelection : WOConditional {
  condition = currType;
}

ItogTypeEditor : ItogTypeEditor {
  currType = currType.type;
  ec = ec;
  class = "grey";
  access = typeAccess;
}

SelectType : OnClickContainer {
  elementName = "td";
  onclick = session.checkRun;
  invokeAction = selectType;
}

Itogs : WORepetition {
  list = itogsList;
  item = item;
}

ItogName : WOString {
  value = item.name;
}

TypeRow : WOGenericContainer {
  elementName = "tr";
  class = styleClass;
  id = typeId;
}

MoveUp: WOImage {
	filename = "up.png";
	framework ="RujelBase";
	align = "center";
	valign = "top";
	onclick="up(get(this,'tr',0));";
	style = "cursor:pointer;";
}
MoveDown: WOImage {
	align = "center";
	filename = "down.png";
	framework ="RujelBase";
	onclick= "down(get(this,'tr',0));";
	style = "cursor:pointer;";
}
SortField : WOTextField {
  value = item.type.sort;
  style = "display:none;";
  numberformat = "0";
  class = "numerate";
}

CurrUp : WOImage {
	filename = "up.png";
	framework ="RujelBase";
	align = "center";
	valign = "top";
	onclick="up(document.getElementById('currType'));";
	style = "cursor:pointer;";
}

CurrDown : WOImage {
	align = "center";
	filename = "down.png";
	framework ="RujelBase";
	onclick= "down(document.getElementById('currType'));";
	style = "cursor:pointer;";
}

ThisYearTitle : WOString {
  value = session.strings.RujelEduResults_EduResults.thisYear;
  escapeHTML = false;
}

Span : OnClickContainer {
  elementName = "span";
  class = "button";
  onclick = session.checkRun;
  invokeAction = prepareItog;
}

PrepareTitle : WOString {
  value = prepareTitle;
  escapeHTML = false;
}

CanPrepare : WOConditional {
  condition = cantPrepare;
  negate = true;
}

DeleteContainer : OnClickContainer {
  elementName = "span";
  invokeAction = deleteContainer;
  hide = cantDeleteContainer;
  style = "float:right;margin:3px;";
  title = session.strings.Reusables_Strings.uiElements.Delete;
  onclick = session.confirmMessage;
}

Cross : WOImage {
  framework = "RujelBase";
  filename = "cross.png";
  height = 12;
  width = 12;
  alt = session.strings.Reusables_Strings.uiElements.Delete;
}

CanSort : WOConditional {
  condition = access.edit;
}

Extensions : WORepetition {
  list = extensions;
  item = extItem;
}

ExtComponent : WOSwitchComponent {
  WOComponentName = extItem.component;
  value = item;
  listName = listName;
  dict = extItem;
}

ExtTitle : WOSwitchComponent {
  WOComponentName = extItem.component;
  listName = listName;
  dict = extItem;
  itogsList = itogsList;
  ec = ec;
}

Preset : WOString {
  value = item.preset;
}

CurrPreset : WOPopUpButton {
  list = allPresets;
  item = item;
  displayString = item.fullName;
  selection = currPreset;
  value = item.presetGroup;
  onchange = "onselection(this);";
  id = "presetSelector";
}

PresetTitle : WOString {
  value = session.strings.RujelEduResults_EduResults.properties.ItogPreset.this;
  escapeHTML = false;
}

PopupLink : WOHyperlink {
  action = editPreset;
  onclick = "return editSelection(this);";
  id = "persetPopupLink";
  title = session.strings.Reusables_Strings.uiElements.Edit;
}

EditImage : WOImage {
	filename = "files_edit.png";
	framework = "app";
	height = 16;
	width = 16;
}
IsActive : WOConditional {
  condition = currType.active;
}

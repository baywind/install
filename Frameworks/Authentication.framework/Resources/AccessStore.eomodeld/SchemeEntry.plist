{
    attributes = (
        {columnName = ACCESS; name = access; prototypeName = integer; }, 
        {
            allowsNull = N; 
            columnName = ATTRIBUTE; 
            name = attribute; 
            prototypeName = string; 
        }, 
        {columnName = SUB; name = sub; prototypeName = integer; }, 
        {columnName = SUP; name = sup; prototypeName = integer; }
    ); 
    attributesUsedForLocking = (access, sub); 
    className = EOGenericRecord; 
    classProperties = (attribute, access, superScheme, accessScheme); 
    externalName = "SCHEME_ENTRY"; 
    fetchSpecificationDictionary = {}; 
    name = SchemeEntry; 
    primaryKeyAttributes = (attribute, sup); 
    relationships = (
        {
            destination = AccessScheme; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = scID; sourceAttribute = sub; }); 
            name = accessScheme; 
        }, 
        {
            destination = AccessScheme; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = scID; sourceAttribute = sup; }); 
            name = superScheme; 
        }
    ); 
}

Jscolor : ResourceLink {
  framework = "app";
  jsLink = "jscolor.js";
}
SorterScriptLink : ResourceLink {
	jsLink = "sorting.js";
	framework = "RujelBase";
}

NameTitle : WOString {
  value = ^dict.workType;
}

ColorsTitle : WOString {
  value = ^dict.colors;
  valueWhenEmpty = "colors";
  escapeHTML = false;
}

WeightTitle : WOString {
  value = session.strings.RujelCriterial_Strings.weight;
  escapeHTML = false;
}

CompulsoryTitle : WOString {
  value = ^dict.compulsory;
  escapeHTML = false;
}

HometaskTitle : WOString {
  value = session.strings.RujelInterfaces_Names.EduLesson.ht;
  escapeHTML = false;
  valueWhenEmpty = "H/W";
}

Lock : WOImage {
  framework = "RujelCriterial";
  filename = "lock.png";
  title = ^dict.fix;
}

Types : WORepetition {
  list = types;
  item = typeItem;
}

Number : WOString {
  value = typeItem.sort;
  numberformat = "0";
}



NameField : WOTextField {
  value = typeItem.typeName;
  style = "text-align:center;";
  class = "checkChanges";
  maxlength = 28;
}

WeightField : WOTextField {
  value = typeItem.dfltWeight;
  size = 4;
  maxlength = 4;
  disabled = cantEdit;
  class = "checkChanges decimal";
}

WithWeightTitile : WOString {
  value = ^dict.withWeight;
  escapeHTML = false;
}

NoWeightTitile : WOString {
  value = ^dict.noWeight;
  escapeHTML = false;
}

NoWeightField : WOTextField {
  value = typeItem.noWeightHex;
  class = "color checkChanges";
  size = 6;
  maxlength = 6;
  onchange = "get(this,'tr').style.backgroundColor = '#' + value";
  disabled = cantEdit;
}

WithWeightField : WOTextField {
  value = typeItem.weightHex;
  class = "color checkChanges";
  size = 6;
  maxlength = 6;
  onchange = "get(this,'tr').style.backgroundColor = '#' + value";
  disabled = cantEdit;
}

TypeRow : OnClickContainer {
  elementName = "tr";
  bgcolor = rowColor;
  onclick = session.checkRun;
  invokeAction = select;
  disabled = cantClick;
  id = rowID;
}

FixWeight : WOCheckBox {
  checked = typeItem.namedFlags.fixWeight;
  disabled = cantEditFlags;
  class = "checkChanges";
}

IsCompulsory : WOCheckBox {
  checked = typeItem.namedFlags.compulsory;
  disabled = cantEditFlags;
  class = "checkChanges";
}

FixCompulsory : WOCheckBox {
  checked = typeItem.namedFlags.fixCompulsory;
  disabled = cantEditFlags;
  class = "checkChanges";
}

IsHometask : WOCheckBox {
  checked = typeItem.namedFlags.hometask;
  disabled = cantEditFlags;
  class = "checkChanges";
}

FixHometask : WOCheckBox {
  checked = typeItem.namedFlags.fixHometask;
  disabled = cantEditFlags;
  class = "checkChanges";
}

Unused : WOCheckBox {
  checked = typeItem.namedFlags.unused;
  disabled = cantEdit;
  class = "checkChanges";
}

CanEdit : WOConditional {
  condition = cantEdit;
  negate = true;
}

CantEdit : WOConditional {
  condition = cantEdit;
}

TypeName : WOString {
  value = typeItem.typeName;
}

Save : WOSubmitButton {
  action = saveOrCreate;
  value = buttonTitle;
  onclick = "enumerate(document.getElementById('typeList'),'typeNum',1);";
}

CanSave : WOConditional {
  condition = showSaveButton;
}

NumField : WOTextField {
  value = sortValue;
  style = "display:none;";
  class = "typeNum";
  numberformat = "0";
}
CurrUp : WOImage {
	filename = "up.png";
	framework ="RujelBase";
	align = "center";
	valign = "top";
	onclick="up(document.getElementById('currType'));";
	style = "cursor:pointer;";
}

CurrDown : WOImage {
	align = "center";
	filename = "down.png";
	framework ="RujelBase";
	onclick= "down(document.getElementById('currType'));";
	style = "cursor:pointer;";
}

Cross : WOImage {
  framework = "RujelBase";
  filename = "cross.png";
  onclick = "closePopup();";
  height = 16;
  width = 16;
}

CanDelete : OnClickContainer {
  elementName = "span";
  hide = cantDelete;
  invokeAction = delete;
  onclick = session.checkRun;
}

Form : WOForm {
}

HasSelection : WOConditional {
  condition = currType.sort;
}

NoSelection : WOConditional {
  condition = currType.sort;
  negate = true;
}

IsManual : WOConditional {
  condition = typeItem.namedFlags.system;
  negate = true;
}

SystemType : WOConditional {
  condition = typeItem.namedFlags.system;
}

SelectCritSet : WOPopUpButton {
  list = critSets;
  item = item;
  displayString = item.setName;
  selection = selectedCritSet;
  noSelectionString = "-=-=-=-=-";
  disabled = cantEdit;
}

CriteriaSet : WOString {
  value =  ^dict.critSet;
  escapeHTML = false;
}

MaskSettings : SettingsByCourse {
  base = maskSettings;
  item = item;
  ec = ^ec;
  title = ^dict.maskTitle;
  rowspan = rowspan;
  pushByCourse = "currMask";
  textValue = "...";
}

TextSetting : WOString {
  value = item.textValue;
}

MaskActive : WOConditional {
  condition = currMask;
}

TypeIsActive : WOCheckBox {
  checked = typeIsActive;
  class = "checkChanges";
  disabled = cantSelect;
}

MaskCell : OnClickContainer {
  elementName = "td";
  invokeAction = selectMask;
  onclick = session.checkRun;
  rowspan = rowspan;
  class = "ungerade";
  style = maskStyle;
}

MaskName : WOTextField {
  value = currMask.textValue;
  class = "checkChanges";
  size = 20;
  style = "text-align:center;";
  id = "focus";
  disabled = cantSelect;
}

MaskAvailable : WOConditional {
  condition = maskSettings;
}

AddMaskButton : OnClickContainer {
  elementName = "div";
  invokeAction = addMaskSettings;
  onclick = session.checkRun;
  class = "button";
  hide = maskSettings;
  style = "float:right;width:10em;padding:4pt;";
}

AddMaskSettingsTitle : WOString {
  value = ^dict.addMaskSettings;
}

SetsTabs : Tabs {
  currTab = currSet;
  tablist = sets;
  vertical = true;
  titleAttribute = "setName";
  hoverAttribute = "comment";
  onClick = session.tryLoad;
  tabgroups = tabgroups;
}

Title : WOString {
  value = ^dict.title;
}

ByCourse : SettingsByCourse {
  base = base;
  item = item;
  numericValue = currID;
  textValue = nameOfCritSet;
  selector = "numericValue";
  ec = ec;
  canSetBase = true;
}

ByCourseReview : SettingsByCourse {
  base = base;
  item = item;
  ec = ec;
  readOnly = true;
  title = ^dict.critSet;
}
ItemName : WOString {
  value = item.textValue;
  valueWhenEmpty = base.textValue;
}

Criteria : WORepetition {
  item = item;
  list = criteria;
}

CritTitle : WOString {
  value = item.title;
}

CritWeight : WOString {
  value = item.dfltWeight;
}

CritComment : WOString {
  value = item.comment;
}

CriterRow : OnClickContainer {
  elementName = "tr";
  hide = isSelected;
  invokeAction = selectCriter;
  onclick = session.checkRun;
  class = "ungerade";
}

EditCriter : WOConditional {
  condition = isSelected;
}

EditCritTitle : WOTextField {
  value = item.title;
  style = "width:3ex;text-align:center;";
  maxlength = 5;
  class = "checkChanges";
}

EditCritMax : WOTextField {
  value = item.dfltMax;
  style = maxFieldStyle;
  maxlength = 5;
  numberformat = "0";
  onkeypress = "return isNumberInput(event);";
  class = "checkChanges";
  name = "crMax";
}

NoCritMax : WOTextField {
  value = noCriter.dfltMax;
  style = maxFieldStyle;
  maxlength = 5;
  numberformat = "0";
  onkeypress = "return isNumberInput(event);";
  class = "checkChanges";
  name = "nocrMax";
}

EditCritWeight : WOTextField {
  value = item.dfltWeight;
  style = "width:3ex;text-align:center;";
  maxlength = 5;
  numberformat = "0";
  onkeypress = "return isNumberInput(event);";
  class = "checkChanges";
}

EditCritComment : WOText {
  value = item.comment;
  rows = 2;
  cols = 15;
}
CanCreateCrit : WOConditional {
  condition = canAddCriter;
}

SaveCriter : WOSubmitButton {
  action = saveCriter;
  value = session.strings.Reusables_Strings.uiElements.Save;
}

DeleteCriter : OnClickContainer {
  elementName = "span";
  invokeAction = deleteCriter;
  onclick = session.confirmMessage;
  hide = cantDeleteCriter;
  title = session.strings.Reusables_Strings.uiElements.Delete;
}

Cross : WOImage {
  framework = "RujelBase";
  filename = "cross.png";
  height = 20;
  width = 20;
}

UnselectCriter : WOGenericElement {
  elementName = "input";
  type = "button";
  invokeAction = selectCriter;
  onclick = session.checkRun;
  value = session.strings.Reusables_Strings.uiElements.Cancel;
}


NewCritTitle : WOTextField {
  value = critDict.title;
  style = "width:3ex;text-align:center;";
  maxlength = 5;
  class = "checkChanges";
}

NewCritMax : WOTextField {
  value = critDict.dfltMax;
  style = "width:3ex;text-align:center;";
  maxlength = 5;
  numberformat = "0";
  onkeypress = "return isNumberInput(event);";
  class = "checkChanges";
  name = "newMax";
}

NewCritWeight : WOTextField {
  value = critDict.dfltWeight;
  style = "width:3ex;text-align:center;";
  maxlength = 5;
  numberformat = "0";
  onkeypress = "return isNumberInput(event);";
  class = "checkChanges";
}

NewCritComment : WOText {
  value = critDict.comment;
  rows = 2;
  cols = 20;
}
AddCriterion : OnClickContainer {
  elementName = "tr";
  onclick = "addCriterion(this)";
  class = "orange";
}

CreatePrompt : WOString {
  value = ^dict.createPrompt;
  valueWhenEmpty = "new critset name";
}
RenamePrompt : WOString {
  value = ^dict.renamePrompt;
  valueWhenEmpty = "change critset name";
}

FormSet : WOForm {
  action = saveName;
  id = "nameForm";
}

SetName : WOTextField {
  value = nameOfCritSet;
  name = "csTitle";
  style = "display:none;";
}

DeleteSet : OnClickContainer {
  elementName = "span";
  onclick = session.confirmMessage;
  invokeAction = deleteCritSet;
  class = "female";
  style = "padding:0px 4px;font-weight:bold;border:double 3px #cc6666;color:#cc3333;";
  title = ^dict.delete;
  hide = access._delete;
}

AddSet : OnClickContainer {
  elementName = "span";
  onclick = "create(get(this,'form'));";
  class = "green";
  hide = session.readAccess._create.CriteriaSet;
  style = "padding:0px 4px;font-weight:bold;border:double 3px #33cc33;color:#33cc33;";
  title = session.strings.Reusables_Strings.uiElements.Add;
}

RenameSet : OnClickContainer {
  elementName = "span";
  onclick = "rename(get(this,'form'));";
  class = "grey";
  style = "padding:0px 4px;font-weight:bold;border:double 3px #666666;color:#333333;";
  title = ^dict.renamePrompt;
  hide = access._edit;
}

CriteriaAvailable : WOConditional {
  condition = currSet.editingContext;
}

AddTitle : WOString {
  value = session.strings.Reusables_Strings.uiElements.Add;
  escapeHTML = false;
}

RenameTitle : WOString {
  value = ^dict.rename;
  valueWhenEmpty = "rename";
}

CritNameTitle : WOString {
  value = ^dict.name;
  valueWhenEmpty = "title";
}

CritWeightTitle : WOString {
  value = session.strings.RujelCriterial_Strings.weight;
  valueWhenEmpty = "weight";
  escapeHTML = false;
}

CommentTitle : WOString {
  value = session.strings.Reusables_Strings.dataTypes.comment;
  valueWhenEmpty = "comment";
  escapeHTML = false;
}

CritSet : WOString {
  value = ^dict.critSet;
  escapeHTML = false;
}

SetForm : WOForm {
}

SetComment : WOText {
  value = currSet.comment;
  rows = 2;
  style = "width:98%;";
  title = session.strings.Reusables_Strings.dataTypes.comment;
  class = "titled";
}

FixMax : WOCheckBox {
  checked = currSet.namedFlags.fixMax;
  disabled = access._edit;
}

FixMaxTitle : WOString {
  value = ^dict.flags.fixMax;
  escapeHTML = false;
}

FixWeight : WOCheckBox {
  checked = currSet.namedFlags.fixWeight;
}

FixWeightTitle : WOString {
  value = ^dict.flags.fixWeight;
  escapeHTML = false;
}

FixList : WOCheckBox {
  checked = currSet.namedFlags.fixList;
}

FixListTitle : WOString {
  value = ^dict.flags.fixList;
  escapeHTML = false;
}

NumerousCriteria : WOCheckBox {
  checked = currSet.namedFlags.numerousCriteria;
}

NumerousCriteriaTitle : WOString {
  value = ^dict.flags.numerousCriteria;
  escapeHTML = false;
}
Save : WOSubmitButton {
  action = save;
  value = session.strings.Reusables_Strings.uiElements.Save;
}

CurrName : WOString {
  value = nameOfCritSet;
}

CanIndex : WOConditional {
  condition = indices.count;
}

CritIndex : WOString {
  value = presentMax;
  escapeHTML = false;
}

EditCritIndexer : WOPopUpButton {
  list = indices;
  noSelectionString = "max:";
  selection = item.indexer;
  item = item2;
  displayString = item2.title;
  onchange = "form.crMax.style.visibility=(selectedIndex>0)?'hidden':'';";
}

NoCritIndexer : WOPopUpButton {
  list = indices;
  noSelectionString = " max:";
  selection = noCriter.indexer;
  item = item2;
  displayString = item2.title;
  onchange = "form.nocrMax.style.visibility=(selectedIndex>0)?'hidden':'';";
}

NewCritIndexer : WOPopUpButton {
  list = indices;
  noSelectionString = "max:";
  selection = critDict.indexer;
  item = item2;
  displayString = item2.title;
  onchange = "form.newMax.style.visibility=(selectedIndex>0)?'hidden':'';";
}

CritIndexTitle : WOString {
  value = presentTitle;
}

Tabs : Tabs {
  currTab = tab;
  tablist = ^dict.tabs;
  numeric = true;
  selectAction = changeTab;
  onClick = session.tryLoad;
}

Regime0 : WOConditional {
  condition = tab;
  negate = true;
}

Regime1 : WOConditional {
  condition = tab;
}

Indices : WORepetition {
  list = indices;
  item = item2;
}

SelectIndex : OnClickContainer {
  elementName = "td";
  invokeAction = selectIndex;
  onclick = session.checkRun;
  class = indexCellClass;
}

IndexTitle : WOString {
  value = item2.title;
}

AddIdx : OnClickContainer {
  elementName = "span";
  onclick = "createIndex();";
  class = "green";
  style = "float:right;padding:0px 4px;margin:1px 2px;font-weight:bold;border:double 3px #33cc33;color:#33cc33;";
  title = session.strings.Reusables_Strings.uiElements.Add;
}

DeleteIdx : OnClickContainer {
  elementName = "span";
  onclick = session.confirmMessage;
  invokeAction = deleteIndex;
  class = "female";
  style = "float:right;margin:1px 2px;padding:0px 4px;font-weight:bold;border:double 3px #cc6666;color:#cc3333;";
  title = session.strings.Reusables_Strings.uiElements.Delete;
  hide = noIndexSelected;
}

RadioButton : WORadioButton {
  checked = radio;
  name = item.title;
}

CreateIndexPrompt : WOString {
  value = ^dict.createIndexPrompt;
  valueWhenEmpty = "new index name";
}

EditIndex : EditIndex {
  indexer = criterion;
  forceType = "criteria";
  showHeader = true;
  access = session.readAccess.FLAGS.CriteriaSet;
  idxTitle = session.strings.RujelCriterial_Strings.titles.idx;
  valueTitle = session.strings.RujelCriterial_Strings.titles.value;
  commentTitle = session.strings.Reusables_Strings.dataTypes.comment;
  valueSize = 10;
}

IndicesForm : WOForm {
}

IndexerEditTitle : WOString {
  value = ^dict.index;
}

NoIndexTitle : WOString {
  value = ^dict.noIndex;
}

CriterlessToggle : WOCheckBox {
  checked = hasCriterless;
  onchange = "document.getElementById('noCrRow').style.visibility=(checked)?'visible':'hidden';";
}

CriteriaToggle : WOCheckBox {
  checked = hasCriteria;
  onchange = "document.getElementById('crList').style.visibility=(checked)?'visible':'hidden';";
}
NoCriterTitle : WOString {
  value = ^dict.noCriter;
}

CriteriaTitle : WOString {
  value = ^dict.criteria;
}

FreeCriteria : WOConditional {
  condition = currSet.editingContext;
  negate = true;
}

FreeCritDescription : WOString {
  value = ^dict.freeCritDescription;
  valueWhenEmpty = "free criteria";
}

CritTable : WOGenericContainer {
  elementName = "tbody";
  id = "crList";
  style = crListStyle;
}

NoCrRow : WOGenericContainer {
  elementName = "tr";
  class = "ungerade";
  id = "noCrRow";
  style = noCritStyle;
}

AddNew : WOCheckBox {
  checked = critDict.newCr;
  id = 'newCr';
  style = "display:none;";
}


DeadLineTitle: WOString {
	value = application.strings.RujelCriterial_Strings.shortDeadline;
	valueWhenEmpty = application.strings.Reusables_Strings.dataTypes.date;
}
AnnounceTitle: WOString {
	value = application.strings.RujelCriterial_Strings.shortAnnounce;
	valueWhenEmpty = application.strings.Reusables_Strings.dataTypes.date;
}

ThemeTitle: WOString {
	value = application.strings.RujelCriterial_Strings.theme;
}
Conditional1: WOConditional {
	condition = isMax;
	negate = true;
}

GenericContainer1: WOGenericContainer {
	colspan = courseItem.criteria.count;
	elementName = "td";
	style = "border-left:none;text-align:left;";
}

IsMax: WOConditional {
	condition = isMax;
}

TextHeader: WOGenericContainer {
	elementName = "th";
	title = application.strings.RujelCriterial_Strings.comments;
	align = "left";
}

TextTitle: WOString {
	value = application.strings.Reusables_Strings.dataTypes.text;
}

Repetition1: WORepetition {
	item = workItem;
	list = courseItem.criteria;
}

Title: WOString {
	value = workItem.title;
	escapeHTML = false;
}

GenericContainer2: WOGenericContainer {
	elementName = "th";
	align = "center";
	title = workItem.comment;
}

MarksPresenter1: MarksPresenter {
	denyCreation = false;
	full = true;
	isSelected = false;
	lesson = workItem.work;
	readOnly = true;
	student = ^student;
	maxlen = 255;
	align = "left";
	presenterCache = parent.presenterCache;
}

Repetition2: WORepetition {
	item = critItem;
	list = workItem.values;
}

String2: WOString {
	value = critItem;
	escapeHTML = false;
}

WorkTheme: WOString {
	value = workItem.theme;
	escapeHTML = false;
}

WeightStr : WOString {
	value = workItem.weightStr;
}

WorkAnnounce: WOString {
	value = workItem.announce;
}

WorkDate: WOString {
	value = workItem.date;
}

Works: WORepetition {
	item = workItem;
	list = courseItem.works;
}

workRow: WOGenericContainer {
	class = "grid";
	elementName = "tr";
	style = workItem.style;
}

WorksTitle : WOString {
  value = application.strings.RujelCriterial_Strings.works;
  valueWhenEmpty = "works";
}

CriteriaTitle : WOString {
  value = application.strings.RujelCriterial_Strings.criteria;
  valueWhenEmpty = "criteria";
}

Type : WOString {
  value = workItem.type;
  escapeHTML = false;
}

IntegralTitle : WOString {
  value = courseItem.integral;
}

IsBcMax : WOConditional {
  condition = workItem.title;
}

BcMaxCell : WOGenericContainer {
  elementName = "td";
  colspan = courseItem.criteria.count;
  align = "center";
}

HasLink : WOConditional {
  condition = workItem.url;
}

WorkLink : WOHyperlink {
  href = workItem.url;
  target = "_blank";
  style = "font-style:italic;";
  string = application.strings.RujelCriterial_Strings.URL;
}

SpecWorksGroups : WORepetition {
  list = courseItem.specWorks;
  item = specItem;
}

SpecTitle : WOString {
  value = specItem.title;
}

GenericContainer1s: WOGenericContainer {
	colspan = specItem.criteria.count;
	elementName = "td";
	style = "border-left:none;text-align:left;";
}

Repetition1s: WORepetition {
	item = workItem;
	list = specItem.criteria;
}

SpecWorks: WORepetition {
	item = workItem;
	list = specItem.works;
}

MarksPresenter1s: MarksPresenter {
	denyCreation = false;
	full = true;
	isSelected = false;
	lesson = workItem.work;
	readOnly = true;
	student = ^student;
	maxlen = 255;
	align = "left";
	presenterCache = parent.presenterCache;
	criteria = specItem.criteria;
}

BcMaxCellS : WOGenericContainer {
  elementName = "td";
  colspan = specItem.criteria.count;
  align = "center";
}
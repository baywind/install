{
    attributes = (
        {
            allowsNull = Y; 
            columnName = "BORDER_SET"; 
            name = bsID; 
            prototypeName = short; 
            userInfo = {"_EntityModeler" = {generateSource = NO; }; }; 
        }, 
        {
            columnName = DESCRIPTION; 
            name = description; 
            prototypeName = word; 
            userInfo = {"_EntityModeler" = {generateSource = NO; }; }; 
        }, 
        {
            allowsNull = N; 
            columnName = "D_ID"; 
            name = dID; 
            prototypeName = short; 
            userInfo = {"_EntityModeler" = {generateSource = NO; }; }; 
        }, 
        {
            allowsNull = N; 
            columnName = "ENT_NAME"; 
            name = entName; 
            prototypeName = word; 
            userInfo = {"_EntityModeler" = {generateSource = NO; }; }; 
        }, 
        {
            columnName = GROUPING1; 
            name = grouping1; 
            prototypeName = word; 
            userInfo = {"_EntityModeler" = {generateSource = NO; }; }; 
        }, 
        {
            columnName = GROUPING2; 
            name = grouping2; 
            prototypeName = word; 
            userInfo = {"_EntityModeler" = {generateSource = NO; }; }; 
        }, 
        {
            allowsNull = N; 
            columnName = "STAT_FIELD"; 
            name = statField; 
            prototypeName = word; 
            userInfo = {"_EntityModeler" = {generateSource = NO; }; }; 
        }
    ); 
    attributesUsedForLocking = (bsID, description, entName, grouping1, grouping2, statField); 
    className = "net.rujel.stats.Description"; 
    classProperties = (borderSet, description, entName, grouping1, grouping2, statField); 
    externalName = DESCRIPTION; 
    fetchSpecificationDictionary = {}; 
    internalInfo = {"_javaClientClassName" = Description; }; 
    name = Description; 
    primaryKeyAttributes = (dID); 
    relationships = (
        {
            destination = BorderSet; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = bsID; sourceAttribute = bsID; }); 
            name = borderSet; 
        }
    ); 
}

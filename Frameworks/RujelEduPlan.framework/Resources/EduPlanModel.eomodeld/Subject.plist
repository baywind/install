{
    attributes = (
        {
            allowsNull = N; 
            columnName = "AREA_ID"; 
            name = areaID; 
            prototypeName = short; 
        }, 
        {columnName = "EXT_NAME"; name = extName; prototypeName = word; }, 
        {columnName = "SPEC_FLAGS"; name = flags; prototypeName = short; }, 
        {columnName = "FULL_NAME"; name = fullName; prototypeName = string; }, 
        {
            allowsNull = N; 
            columnName = "NORMAL_GROUP"; 
            name = normalGroup; 
            prototypeName = byte; 
            valueType = i; 
        }, 
        {allowsNull = N; columnName = "SORT_NUM"; name = num; prototypeName = short; }, 
        {
            allowsNull = Y; 
            columnName = "EDU_SECTION"; 
            name = sectionID; 
            prototypeName = short; 
        }, 
        {allowsNull = N; columnName = "S_ID"; name = sID; prototypeName = short; }, 
        {
            allowsNull = N; 
            columnName = "SUB_GROUPS"; 
            name = subgroups; 
            prototypeName = byte; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "SHORT_NAME"; 
            name = subject; 
            prototypeName = word; 
        }, 
        {
            allowsNull = N; 
            columnName = "SUBJECT_GROUP"; 
            name = subjectGroupID; 
            prototypeName = short; 
        }
    ); 
    attributesUsedForLocking = (
        areaID, 
        extName, 
        flags, 
        fullName, 
        normalGroup, 
        num, 
        sectionID, 
        subgroups, 
        subject
    ); 
    className = "net.rujel.eduplan.Subject"; 
    classProperties = (
        area, 
        extName, 
        flags, 
        fullName, 
        normalGroup, 
        num, 
        planHours, 
        section, 
        subgroups, 
        subject, 
        subjectGroup
    ); 
    externalName = "PL_SUBJECT"; 
    fetchSpecificationDictionary = {}; 
    name = Subject; 
    primaryKeyAttributes = (sID); 
    relationships = (
        {
            destination = SubjectArea; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = saID; sourceAttribute = areaID; }); 
            name = area; 
        }, 
        {
            deleteRule = EODeleteRuleCascade; 
            destination = PlanHours; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = subjectID; sourceAttribute = sID; }); 
            name = planHours; 
        }, 
        {
            destination = SchoolSection; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = sID; sourceAttribute = sectionID; }); 
            name = section; 
        }, 
        {
            destination = SubjectGroup; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = sID; sourceAttribute = subjectGroupID; }); 
            name = subjectGroup; 
        }
    ); 
}

Title : WOString {
  value = application.strings.Strings.title;
  valueWhenEmpty = "RUJEL Diary";
}

RegimeField : WOHiddenField {
  name = "regime";
  value = currTab.id;
}

GrField : WOHiddenField {
  name = "grID";
  numberformat = "0";
  value = currGr;
}

StudentField : WOHiddenField {
  name = "studentID";
  value = studentID;
  numberformat = "0";
}

DateField : DateField {
  size = 10;
  name = "date";
  date = date;
  style = "text-align:center;";
}

ShowSince : WOConditional {
  condition = currTab.period;
}

Since : DateField {
  size = 10;
  name = "since";
  date = since;
  baseName = "date";
  shift = -7;
  style = "text-align:center;";
}
Reusables : ResourceLink {
	framework = "Reusables";
	jsLink = "scripts.js";
	cssLink = "style.css";
}

LocalLinks : ResourceLink {
	framework = "app";
	jsLink = "scripts.js";
	cssLink = "styles.css";
}

TabLinks : ResourceLink {
	framework = currTab.framework;
	jsLink = currTab.jsLink;
	cssLink = currTab.cssLink;
}

GroupRow : OnClickContainer {
  elementName = "tr";
  onclick = item2.onclick;
  disabled = current;
  class = grClass;
}

GroupName : WOString {
  value = item2.title;
}

GroupTitle : WOString {
  value = item3.title;
}

RGBColor : ResourceLink {
	framework = "Reusables";
	jsLink = "rgbcolor.js";
}

GoupGrade : WOString {
  value = item2.grade;
}

Component : WOSwitchComponent {
  WOComponentName = currTab.component;
  tab = currTab;
  group = currGr;
  courses = courses;
  date = date;
  since = since;
}

Tabs : Tabs {
  currTab = currTab.id;
  tablist = tabs;
  titleAttribute = "title";
  idAttribute = "id";
  onClick = "takeValueForKey(this.id,'regime',true);";
}

PeriodTitle: WOString {
	value = application.strings.Reusables_Strings.dataTypes.period;
}

SinceTitle : WOString {
  value = application.strings.Reusables_Strings.dataTypes.since;
}

ToTitle : WOString {
  value = application.strings.Reusables_Strings.dataTypes.to;
}

DateTitle : WOString {
  value = application.strings.Reusables_Strings.dataTypes.date;
}

JustDate : WOConditional {
  condition = currTab.period;
  negate = true;
}

RecentGroupName : WOString {
  value = grName;
}

GroupSelected : WOConditional {
  condition = courses.count;
}

FrontPage : WOConditional {
  condition = currGr;
  negate = true;
}

PhotoBy : WOString {
  value = application.strings.Strings.photo;
  escapeHTML = false;
}

Copyright : WOString {
  value = application.strings.Strings.copy;
  escapeHTML = false;
}


Body : WOBody {
	filename = "Dairy.jpg";
}

SchoolName : WOString {
  value = application.schoolName;
}

ShowStudent : WOConditional {
  condition = studentID;
}

IndTitle : WOString {
  value = application.strings.Strings.individual;
  valueWhenEmpty = "/ind/";
  escapeHTML = false;
}

Sections : WORepetition {
  item = item;
  list = groupList;
}

GroupRows : WORepetition {
  list = item.rows;
  item = item2;
}

HasTitle : WOConditional {
  condition = item2.title;
}

GroupCells : WORepetition {
  list = item2.groups;
  item = item3;
}

GroupCell : OnClickContainer {
  elementName = "td";
  onclick = item3.onclick;
  class = grClass;
  style = "padding:2px 4px;";
  disabled = current;
}

SectionTitle : WOString {
  value = item.title;
}
